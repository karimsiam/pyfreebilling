version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: pyfreebilling_local_django
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

#  postgres:
#    build:
#      context: .
#      dockerfile: ./compose/production/postgres/Dockerfile
#    image: pyfreebilling_production_postgres
#    volumes:
#      - local_postgres_data:/var/lib/postgresql/data
#      - local_postgres_data_backups:/backups
#    env_file:
#      - ./.envs/.local/.postgres
#    ports:
#      - 5433:5432

#  adminer:
#    image: adminer
#    depends_on:
#      - postgres
#    restart: always
#    env_file:
#      - ./.envs/.local/.adminer
#    ports:
#      - 9090:8080

  kamailio:
    build:
      context: .
      dockerfile: ./compose/production/kamailio/Dockerfile
    image: pyfreebilling_production_kamailio
    env_file:
      - ./.envs/.production/.kamailio
      - ./.envs/.production/.postgres
    ports:
      - "0.0.0.0:5060:5060/udp"
      - "0.0.0.0:5060:5060/tcp"
      - "0.0.0.0:12221:12221"


  router:
    build: https://github.com/mwolff44/pyfb-router.git
    image: pyfreebilling_local_router
    restart: always
    env_file:
      - ./.envs/.local/.router
      - ./.envs/.local/.postgres
    ports:
      - 8001:8081
