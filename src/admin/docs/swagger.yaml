basePath: /v1
definitions:
  filters.Pagination:
    properties:
      current_page:
        type: integer
      last_page:
        type: integer
      next_page:
        type: integer
      page_size:
        type: integer
      prev_page:
        type: integer
      total_records:
        type: integer
    type: object
  models.Gateway:
    properties:
      created_at:
        description: Creation time
        type: string
      id:
        description: Gateway ID
        type: integer
      ip_address:
        description: IP Address of the gateway
        type: string
      name:
        description: Name of the gateway
        type: string
      port:
        description: SIP Port of the gateway
        maximum: 65535
        minimum: 1
        type: integer
      protocol:
        description: Protocol used by the gateway
        enum:
        - udp
        - tcp
        - tls
        - any
        type: string
      updated_at:
        description: Updated time
        type: string
    required:
    - ip_address
    - name
    - port
    - protocol
    type: object
  utils.PaginatedResponseHTTP:
    properties:
      data: {}
      error:
        example: false
        type: boolean
      message:
        type: string
      pagination:
        $ref: '#/definitions/filters.Pagination'
    type: object
  utils.ResponseErrorHTTP:
    properties:
      error:
        example: true
        type: boolean
      message:
        type: string
    type: object
  utils.ResponseHTTP:
    properties:
      data: {}
      error:
        example: false
        type: boolean
      message:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    name: Mathias WOLFF
    url: https://www.pyfreebilling.com
  description: This is the documentation API for P-KISS-SBC.
  license:
    name: AGPL 3.0
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  termsOfService: http://swagger.io/terms/
  title: P-KISS-SBC API
  version: 1.0.0
paths:
  /gateways:
    get:
      description: Responds with the list of gateways as JSON.
      parameters:
      - default: 1
        description: int valid
        in: query
        maximum: 10000000
        minimum: 1
        name: page
        type: integer
      - default: 5
        description: int valid
        in: query
        maximum: 100
        minimum: 5
        name: page_size
        type: integer
      - default: id
        description: string enums
        enum:
        - id
        - name
        - ip_address
        - -id
        - -name
        - -ip_address
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.PaginatedResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Gateway'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseErrorHTTP'
      summary: Get a paginated list of gateways
      tags:
      - gateways
  /gateways/:
    post:
      description: Takes a gateway JSON and stores in DB. Return saved JSON.
      parameters:
      - description: gateway object
        in: body
        name: gateway
        required: true
        schema:
          $ref: '#/definitions/models.Gateway'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.Gateway'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseErrorHTTP'
      summary: Creates a new gateway object
      tags:
      - gateways
  /gateways/{id}:
    delete:
      description: delete gateway.
      parameters:
      - description: id of the gateway
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseHTTP'
      summary: Delete a gateway
      tags:
      - gateways
    get:
      description: Get gateway by ID
      parameters:
      - description: Gateway ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Location:
              description: /gateway/1
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/utils.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.Gateway'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseErrorHTTP'
      summary: Show a gateway
      tags:
      - gateways
    put:
      description: update gateway.
      parameters:
      - description: id of the gateway
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.Gateway'
              type: object
      summary: Update a gateway
      tags:
      - gateways
  /health:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
